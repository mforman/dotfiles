if [ -n "${ZSH_DEBUGRC+1}" ]; then
    zmodload zsh/zprof
fi

# Need to load Powerlevel10k before the instant prompt
source $HOME/.powerlevel10k/powerlevel10k.zsh-theme

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

alias reload!='source ~/.zshrc'

# Just do this instead of installing oh-my-zsh
setopt autocd
setopt inc_append_history
setopt share_history
set -o vi

HISTSIZE=5000
SAVEHIST=5000
HISTFILE=~/.zsh_history

source ~/.commonprofile

# Enbale direnv
eval "$(direnv hook zsh)"

# Where should I put you?
bindkey -s ^f "tmux-sessionizer\n"

function zvm_after_init() {
  #  Fuzzy finder
  {{ if eq .chezmoi.os "darwin" -}}
  [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
  {{- else if eq .chezmoi.os "linux" -}}
  [ -f /usr/share/doc/fzf/examples/key-bindings.zsh ] && source /usr/share/doc/fzf/examples/key-bindings.zsh
  [ -f /usr/share/doc/fzf/examples/completion.zsh ] && source /usr/share/doc/fzf/examples/completion.zsh
  {{- end }}
}

# ZVM_INIT_MODE=sourcing
# source $HOME/.zsh-vi-mode/zsh-vi-mode.plugin.zsh

# NeoVim Switcher for different configs
function nvims() {
  items=$(find $HOME/.config -maxdepth 2 -name "init.lua" -type f -execdir sh -c 'pwd | xargs basename' \;)
  selected=$(printf "%s\n" "${items[@]}" | FZF_DEFAULT_OPTS="${FZF_DEFAULT_OPTS-} --preview-window 'right:border-left:50%:<40(right:border-left:50%:hidden)' --preview 'lsd -l -A --tree --depth=1 --color=always --blocks=size,name ~/.config/{} | head -200'" fzf )
  if [[ -z $selected ]]; then
    return 0
  elif [[ $selected == "nvim" ]]; then
    selected=""
  fi
  NVIM_APPNAME=$selected nvim "$@"
}
alias nvs=nvims

# zsh parameter completion for the dotnet CLI

_dotnet_zsh_complete()
{
  local completions=("$(dotnet complete "$words")")

  # If the completion list is empty, just continue with filename selection
  if [ -z "$completions" ]
  then
    _arguments '*::arguments: _normal'
    return
  fi

  # This is not a variable assignment, don't remove spaces!
  _values = "${(ps:\n:)completions}"
}

compdef _dotnet_zsh_complete dotnet

# Debug zsh startup time
alias zsh_debug="time ZSH_DEBUGRC=1 zsh -i -c exit"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[ -f ~/.p10k.zsh ] && source ~/.p10k.zsh

if [ -n "${ZSH_DEBUGRC+1}" ]; then
    zprof
fi
